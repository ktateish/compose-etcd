# vim: set ft=yaml:

# template: Template for etcd config spec
#   template can be specified as default value of your each config spec.
#   all parameters but 'name' can be specified in template
#
template:
  # domain: The domain of your first etcd node
  #   If your clients needs FQDN of the etcd server nodes to access them,
  #   domain have to be specified
  #
  #   type: optional
  #   default: ""
  domain: example.org

  # image: The etcd docker image URL
  #
  #   type: optional
  #   default: "quay.io/coreos/etcd:latest"
  image: quay.io/coreos/etcd:latest

  # token: Secret token for cluster member
  #   It is recommended that the token is generated by random source like:
  #      dd if=/dev/urandom bs=32 count=1 2>/dev/null | base64 | sed -e 's,[+/=],,g'
  #
  #   type: optional
  #   default: ""
  token: my_secret_token

  # client_port: The port number accessed by etcd clients
  #
  #   type: optional
  #   default: 2379
  client_port: 2379

  # peer_port: The port number accessed by etcd cluster member
  #
  #   type: optional
  #   default: 2380
  peer_port: 2380

  # listen_public_addr: IP Address accessed from out side of the cluster
  #
  #   type: optional
  #   default: 0.0.0.0
  listen_public_addr: 0.0.0.0

  # listen_client_addr: IP Address listened at each node for client access
  #
  #   type: optional
  #   default: 0.0.0.0
  listen_client_addr: 0.0.0.0

  # listen_peer_addr: IP Address listened at each node for cluster member access
  #
  #   type: optional
  #   default: 0.0.0.0
  listen_peer_addr: 0.0.0.0

  # cluster_state: status of the cluster
  #   'new' is for booting up a new cluster. 'existing' is for participate a
  #   existing cluster.
  #
  #   type: optional
  #   default: new
  cluster_state: new


  # debug: toggle for debug
  #
  # type: optional
  # default: false
  debug: false

specs:
  # name: The name of your first etcd node
  #
  #   type: required
  #   default: none
  - name: etcd0
  - name: etcd1
  - name: etcd2
